import { useState } from 'react';
import Input from '../ui/Input';
import Button from '../ui/Button';
import './AuthForm.css';

function AuthForm({ type, onSubmit, loading, error }) {
    const [email, setEmail] = useState('');
    const [password, setPassword] = useState('');
    const [errors, setErrors] = useState({});

    const validate = () => {
        const newErrors = {};
        if (!email) newErrors.email = 'Email –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω';
        else if (!/^\S+@\S+\.\S+$/.test(email))
            newErrors.email = '–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç email';

        if (!password) newErrors.password = '–ü–∞—Ä–æ–ª—å –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω';
        else if (password.length < 6)
            newErrors.password = '–ü–∞—Ä–æ–ª—å —Å–ª–∏—à–∫–æ–º –∫–æ—Ä–æ—Ç–∫–∏–π';

        setErrors(newErrors);
        return Object.keys(newErrors).length === 0;
    };

    const handleSubmit = (e) => {
        e.preventDefault();
        if (validate()) {
            try {
                onSubmit({ email, password });
            } catch (err) {
                // –û—à–∏–±–∫–∞ —É–∂–µ –±—É–¥–µ—Ç —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–∑ API
                setErrors({ form: err.message });
            }
        }
    };

    return (
        <form className="auth-form" onSubmit={handleSubmit}>
            {error && (
                <div className="error-message">
                    {error.form.includes('email') ? '‚úâÔ∏è ' : 'üîí '}
                    {error.form}
                </div>
            )}

            <Input
                type="email"
                placeholder="Email"
                value={email}
                onChange={(e) => setEmail(e.target.value)}
                error={errors.email}
                required
            />

            <Input
                type="password"
                placeholder="–ü–∞—Ä–æ–ª—å"
                value={password}
                onChange={(e) => setPassword(e.target.value)}
                error={errors.password}
                required
                minLength="6"
            />

            <Button type="submit" disabled={loading}>
                {loading
                    ? '–ó–∞–≥—Ä—É–∑–∫–∞...'
                    : type === 'login'
                    ? '–í–æ–π—Ç–∏'
                    : '–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è'}
            </Button>
        </form>
    );
}

export default AuthForm;
